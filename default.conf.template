server {
    listen       80;
    listen  [::]:80;
    server_name  ${PRIMARY_DOMAIN};
    
    location / {
        try_files $uri @reveverse_proxy;
    }

    location @reveverse_proxy {
        set $excluded "js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot";
        proxy_set_header X-Prerender-Token ${PRERENDER_API_KEY};
        proxy_set_header Host ${PRIMARY_DOMAIN};
        proxy_set_header Connection "";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        set $prerender 0;
        if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\/0\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|lighthouse") {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }

        # The default is to disable CDN caching, but we still want to
        # let static resources cached and not prerendered
        set $cache_header "private,max-age=600,must-revalidate";

        if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
            set $prerender 0;
            set $cache_header "public,max-age=31536000";
        }

        proxy_hide_header Cache-Control;
        add_header Cache-Control $cache_header;
        
        #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
        resolver 8.8.8.8 8.8.4.4;
 
        if ($prerender = 1) {
            #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
            set $prerender "${PRERENDER_HOST}";

            rewrite .* /https://${PRIMARY_DOMAIN}$uri break;
            proxy_pass https://$prerender;
        }
        if ($prerender = 0) {
            #setting backend as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
            set $backend "${SECONDARY_DOMAIN}";

            rewrite .* $uri break;
            proxy_pass https://$backend;
        }
    }
}
